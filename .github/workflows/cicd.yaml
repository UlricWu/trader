name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - dev-*
  pull_request:
    branches:
      - dev

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest
        run: pytest

  merge-to-master:
    name: Auto-merge dev into master
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'  # Only on push to dev after test success

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge dev into master
        run: |
          git fetch origin master
          git checkout master
          git merge --no-ff origin/dev -m "Auto-merge dev into master from CI/CD"
          git push origin master

  release:
    name: Create Release Tag
    needs: merge-to-master
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release Tag
        run: |
          DATE=$(date +'%Y-%m-%d')
          TAG="release-${DATE}"
          git tag "$TAG"
          git push origin "$TAG"

  sync-dev:
    name: Sync master into dev
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge master into dev
        run: |
          git fetch origin dev
          git checkout dev
          git merge --no-ff origin/master -m "Sync master into dev after release"
          git push origin dev
