name: Post-Merge Tasks

on:
  push:
    branches:
      - 'dev'
#  pull_request:
#    branches:
#      - 'master'
#      - 'dev'
jobs:
  auto-merge-dev-to-master:
    name: Auto Merge dev → master
    runs-on: ubuntu-latest
    #    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev')  # Only on push to dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Important: fetch all history and branches

      - name: Configure Git for GitHub Actions
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch master branch
        run: git fetch origin master:master

      - name: Checkout master
        run: git checkout master

      - name: Merge dev into master
        run: git merge origin/dev -X theirs --no-edit --allow-unrelated-histories --no-ff --commit -m "Auto-merge dev into master"

      - name: Merge dev into master
        run: |

          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release on master
    runs-on: ubuntu-latest
    needs: auto-merge-dev-to-master
    steps:
      - uses: actions/checkout@v3

      - id: date
        run: echo "date=$(TZ=Asia/Taipei date +'%Y-%m-%d-%H%M-%Z')" >> $GITHUB_OUTPUT


      - uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.date.outputs.date }}
          name: Release ${{ steps.date.outputs.date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync:
    name: Sync master → dev
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master

      - run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch origin dev
          git checkout dev
          git merge origin/master --no-ff --no-edit --allow-unrelated-histories
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}