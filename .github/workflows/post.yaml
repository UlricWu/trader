name: Post-Merge Tasks

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'master'
jobs:

  merge-master-back-to-dev:
    if: github.event.pull_request.merged == true
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
      - name: Merge master back to dev
        run: |
          git fetch --unshallow
          git checkout dev
          git pull
          git merge --no-ff master -m "Auto-merge master back to dev"
          git push

  wait-auto-merge:
    name: Wait for PR to merge
    runs-on: ubuntu-latest
    needs: auto-merge-pr
    steps:
      - name: Wait 30 seconds
        run: sleep 10

  release:
    name: Release on master
    runs-on: ubuntu-latest
    needs: wait-auto-merge
    steps:
      - uses: actions/checkout@v3

      - id: date
        run: echo "date=$(TZ=Asia/Taipei date +'%Y-%m-%d-%H%M-%Z')" >> $GITHUB_OUTPUT


      - uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.date.outputs.date }}
          name: Release ${{ steps.date.outputs.date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync:
    name: Sync master â†’ dev
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master

      - run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch origin dev
          git checkout dev
          git merge origin/master --no-ff --no-edit --allow-unrelated-histories
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}